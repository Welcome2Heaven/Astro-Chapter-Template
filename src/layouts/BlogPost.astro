---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { getCollection } from "astro:content";

type Props = CollectionEntry<"chapters">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
const posts = (await getCollection("chapters")).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);
const currentPath = Astro.url.pathname;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: black;
      }
	  .description {
		opacity: .3;
      }
      .last-updated-on {
        font-style: italic;
      }
      .ChapterButtons {
        width: 720px;
        max-width: calc(100% - 2em);
        display: flex;
        justify-content: space-between;
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      .ChapterButton {
        background-color: var(--accent);
        border: 2px solid #303045;
        border-radius: 30px;
        box-shadow: #303045 3px 3px 0 0;
        color: #303045;
        cursor: pointer;
        display: inline-block;
        font-weight: 500;
        font-size: 18px;
        padding: 0 10px;
        line-height: 40px;
        text-align: center;
        text-decoration: none;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
      }

      .ChapterButton:hover {
        transform: scale(1.05) rotate(-1deg);
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="prose">
          <div class="title">
            <h1>{title}</h1>
			<p class="description">{description}</p>
            <hr />
            <div class="date">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
          </div>
          <slot />
        </div>
      </article>
      <div class="ChapterButtons">
        {
          parseInt(currentPath.split("/")[2]) != 1 && (
            <a
              class="ChapterButton"
              href={
                "/chapters/" +
                (parseInt(currentPath.split("/")[2]) - 1).toString()
              }
            >
              Previous
            </a>
          )
        }

               {
          parseInt(currentPath.split("/")[2]) < posts.length && (
            <a
              class="ChapterButton"
              href={
                "/chapters/" +
                (parseInt(currentPath.split("/")[2]) + 1).toString()
              }
            >
              Next
            </a>
          )
        }

      </div>
    </main>
    <Footer />
  </body>
</html>
